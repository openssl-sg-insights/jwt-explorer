name: Build

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Configure sccache
        uses: visvirial/sccache-action@v1
        with:
          cache-key: sccache-ubuntu-latest
          release-name: latest
          arch: x86_64-unknown-linux-musl

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: nightly
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          toolchain: nightly
          args: -- -D warnings

  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Get the current arch (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "ARCH=x86_64-unknown-linux-musl" >> $GITHUB_ENV

      - name: Get the current arch (windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "ARCH=x86_64-pc-windows-msvc" >> $GITHUB_ENV

      - name: Get the current arch (macOS-latest)
        if: matrix.os == 'macOS-latest'
        run: |
          echo "ARCH=x86_64-apple-darwin" >> $GITHUB_ENV

      - name: Configure sccache
        uses: visvirial/sccache-action@v1
        with:
          cache-key: sccache-ubuntu-latest
          release-name: latest
          arch: ${{ env.ARCH }}

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
            sudo apt-get install \
              libxcb-shape0-dev \
              libxcb-xfixes0-dev \
              libxkbcommon-dev

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CLICOLOR_FORCE: 1
